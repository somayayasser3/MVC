// <auto-generated />
using Day02.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day02.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20250518101028_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day02.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dept_id")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = "Bachelor",
                            Dept_id = 1,
                            Hours = 0,
                            MinDegree = 50,
                            Name = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            Degree = "Bachelor",
                            Dept_id = 1,
                            Hours = 0,
                            MinDegree = 60,
                            Name = "Data Structures and Algorithms"
                        },
                        new
                        {
                            Id = 3,
                            Degree = "Bachelor",
                            Dept_id = 1,
                            Hours = 0,
                            MinDegree = 55,
                            Name = "Database Systems"
                        },
                        new
                        {
                            Id = 4,
                            Degree = "Bachelor",
                            Dept_id = 2,
                            Hours = 0,
                            MinDegree = 50,
                            Name = "Calculus I"
                        },
                        new
                        {
                            Id = 5,
                            Degree = "Bachelor",
                            Dept_id = 2,
                            Hours = 0,
                            MinDegree = 55,
                            Name = "Linear Algebra"
                        },
                        new
                        {
                            Id = 6,
                            Degree = "Bachelor",
                            Dept_id = 3,
                            Hours = 0,
                            MinDegree = 60,
                            Name = "Arch"
                        },
                        new
                        {
                            Id = 7,
                            Degree = "Master",
                            Dept_id = 3,
                            Hours = 0,
                            MinDegree = 65,
                            Name = "ML"
                        },
                        new
                        {
                            Id = 8,
                            Degree = "Bachelor",
                            Dept_id = 4,
                            Hours = 0,
                            MinDegree = 55,
                            Name = "Genetic Algorithms"
                        });
                });

            modelBuilder.Entity("Day02.Models.CourseResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("Trainee_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Crs_Id");

                    b.HasIndex("Trainee_Id");

                    b.ToTable("CourseResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Crs_Id = 1,
                            Degree = 85,
                            Trainee_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Crs_Id = 2,
                            Degree = 92,
                            Trainee_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            Crs_Id = 3,
                            Degree = 78,
                            Trainee_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            Crs_Id = 1,
                            Degree = 88,
                            Trainee_Id = 2
                        },
                        new
                        {
                            Id = 5,
                            Crs_Id = 2,
                            Degree = 76,
                            Trainee_Id = 2
                        },
                        new
                        {
                            Id = 6,
                            Crs_Id = 1,
                            Degree = 90,
                            Trainee_Id = 3
                        },
                        new
                        {
                            Id = 7,
                            Crs_Id = 4,
                            Degree = 95,
                            Trainee_Id = 4
                        },
                        new
                        {
                            Id = 8,
                            Crs_Id = 5,
                            Degree = 82,
                            Trainee_Id = 4
                        },
                        new
                        {
                            Id = 9,
                            Crs_Id = 4,
                            Degree = 87,
                            Trainee_Id = 5
                        },
                        new
                        {
                            Id = 10,
                            Crs_Id = 6,
                            Degree = 91,
                            Trainee_Id = 6
                        },
                        new
                        {
                            Id = 11,
                            Crs_Id = 7,
                            Degree = 84,
                            Trainee_Id = 6
                        },
                        new
                        {
                            Id = 12,
                            Crs_Id = 6,
                            Degree = 79,
                            Trainee_Id = 7
                        },
                        new
                        {
                            Id = 13,
                            Crs_Id = 8,
                            Degree = 93,
                            Trainee_Id = 8
                        },
                        new
                        {
                            Id = 14,
                            Crs_Id = 8,
                            Degree = 86,
                            Trainee_Id = 9
                        });
                });

            modelBuilder.Entity("Day02.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Ahmed",
                            Name = "CS"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Ali",
                            Name = "Math"
                        },
                        new
                        {
                            Id = 3,
                            Manager = "Omar",
                            Name = "OS"
                        },
                        new
                        {
                            Id = 4,
                            Manager = "Osama",
                            Name = "Dotnet"
                        });
                });

            modelBuilder.Entity("Day02.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Crs_Id")
                        .HasColumnType("int");

                    b.Property<int>("Dept_id")
                        .HasColumnType("int");

                    b.Property<string>("Imag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Crs_Id");

                    b.HasIndex("Dept_id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Giza",
                            Crs_Id = 1,
                            Dept_id = 1,
                            Imag = "m.jpg",
                            Name = "Ahmed",
                            Salary = 65000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "Giza",
                            Crs_Id = 2,
                            Dept_id = 1,
                            Imag = "f.jpg",
                            Name = "Sarah",
                            Salary = 72000m
                        },
                        new
                        {
                            Id = 3,
                            Address = "Cairo",
                            Crs_Id = 3,
                            Dept_id = 1,
                            Imag = "f.jpg",
                            Name = "Alaa",
                            Salary = 68000m
                        },
                        new
                        {
                            Id = 4,
                            Address = "Alex",
                            Crs_Id = 4,
                            Dept_id = 2,
                            Imag = "f.jpg",
                            Name = "Nour",
                            Salary = 70000m
                        },
                        new
                        {
                            Id = 5,
                            Address = "Monoufia",
                            Crs_Id = 5,
                            Dept_id = 2,
                            Imag = "m.jpg",
                            Name = "Mustafa",
                            Salary = 75000m
                        },
                        new
                        {
                            Id = 6,
                            Address = "Aswan",
                            Crs_Id = 6,
                            Dept_id = 3,
                            Imag = "m.jpg",
                            Name = "Mohamed",
                            Salary = 80000m
                        },
                        new
                        {
                            Id = 7,
                            Address = "Luxur",
                            Crs_Id = 7,
                            Dept_id = 3,
                            Imag = "m.jpg",
                            Name = "Yousef",
                            Salary = 85000m
                        },
                        new
                        {
                            Id = 8,
                            Address = "Cairo",
                            Crs_Id = 8,
                            Dept_id = 4,
                            Imag = "m.jpg",
                            Name = "Yassin",
                            Salary = 67000m
                        });
                });

            modelBuilder.Entity("Day02.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Imag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Giza",
                            Dept_Id = 1,
                            Grade = 70,
                            Imag = "m.jpg",
                            Name = "Omar"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Giza",
                            Dept_Id = 1,
                            Grade = 55,
                            Imag = "m.jpg",
                            Name = "Ahmed"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Cairo",
                            Dept_Id = 1,
                            Grade = 80,
                            Imag = "m.jpg",
                            Name = "Mahmoud"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Monoufia",
                            Dept_Id = 2,
                            Grade = 75,
                            Imag = "f.jpg",
                            Name = "Fatma"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Alex",
                            Dept_Id = 2,
                            Grade = 90,
                            Imag = "f.jpg",
                            Name = "Omnia"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Alex",
                            Dept_Id = 3,
                            Grade = 66,
                            Imag = "f.jpg",
                            Name = "Soha"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Cairo",
                            Dept_Id = 3,
                            Grade = 95,
                            Imag = "m.jpg",
                            Name = "Amr"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Tanta",
                            Dept_Id = 4,
                            Grade = 77,
                            Imag = "m.jpg",
                            Name = "Eman"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Luxur",
                            Dept_Id = 4,
                            Grade = 100,
                            Imag = "m.jpg",
                            Name = "Mohamed"
                        });
                });

            modelBuilder.Entity("Day02.Models.Course", b =>
                {
                    b.HasOne("Day02.Models.Department", "department")
                        .WithMany("Courses")
                        .HasForeignKey("Dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Day02.Models.CourseResult", b =>
                {
                    b.HasOne("Day02.Models.Course", "course")
                        .WithMany("courseResults")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day02.Models.Trainee", "trainee")
                        .WithMany("courseResults")
                        .HasForeignKey("Trainee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("trainee");
                });

            modelBuilder.Entity("Day02.Models.Instructor", b =>
                {
                    b.HasOne("Day02.Models.Course", "course")
                        .WithMany("instructors")
                        .HasForeignKey("Crs_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day02.Models.Department", "department")
                        .WithMany("instructors")
                        .HasForeignKey("Dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("department");
                });

            modelBuilder.Entity("Day02.Models.Trainee", b =>
                {
                    b.HasOne("Day02.Models.Department", "department")
                        .WithMany("trainees")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Day02.Models.Course", b =>
                {
                    b.Navigation("courseResults");

                    b.Navigation("instructors");
                });

            modelBuilder.Entity("Day02.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("instructors");

                    b.Navigation("trainees");
                });

            modelBuilder.Entity("Day02.Models.Trainee", b =>
                {
                    b.Navigation("courseResults");
                });
#pragma warning restore 612, 618
        }
    }
}
